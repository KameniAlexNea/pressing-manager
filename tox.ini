[tox]
envlist = py310, py311, lint, format, security, type, test
skipsdist = True
skip_missing_interpreters = True

[testenv]
description = Run tests with unittest
deps =
    fastapi
    uvicorn[standard]
    pydantic
    pyyaml
    jinja2
    python-multipart
    sqlalchemy
    coverage
commands =
    coverage run -m unittest discover -s tests -p "test_*.py"
    coverage report -m

[testenv:lint]
description = Run linters
deps =
    black>=23.0,<25.0
    ruff>=0.1.0
commands =
    ruff check app/ main.py
    black --check app/ main.py

[testenv:format]
description = Format code with black and ruff
deps =
    black>=23.0,<25.0
    ruff>=0.1.0
    isort>=5.0
commands =
    isort app/ main.py
    black app/ main.py
    ruff check app/ main.py --fix --ignore E712
    ruff format app/ main.py

[testenv:security]
description = Run security checks
deps =
    safety
commands =
    safety scan

[testenv:type]
description = Run type checks with mypy
deps =
    mypy>=1.0
    pydantic
    sqlalchemy
    fastapi
commands =
    mypy app/ main.py

[testenv:test]
description = Run all tests with coverage using unittest
deps =
    fastapi
    uvicorn[standard]
    pydantic
    pyyaml
    jinja2
    python-multipart
    sqlalchemy
    coverage

[testenv:integration]
description = Run integration tests
deps =
    fastapi
    uvicorn[standard]
    pydantic
    pyyaml
    jinja2
    python-multipart
    sqlalchemy
    requests
commands =
    python -m pytest tests/ -v -k integration

[testenv:performance]
description = Run performance tests
deps =
    fastapi
    uvicorn[standard]
    pydantic
    pyyaml
    jinja2
    python-multipart
    sqlalchemy
    requests
commands =
    python -m pytest tests/ -v -k performance

[testenv:all]
description = Run all tests including lint, format, security, type, and performance
deps =
    fastapi
    uvicorn[standard]
    pydantic
    pyyaml
    jinja2
    python-multipart
    sqlalchemy
    requests
    black>=23.0,<25.0
    ruff>=0.1.0
    isort>=5.0
    safety
    mypy>=1.0
    coverage
commands =
    ruff check app/ main.py
    black --check app/ main.py
    isort --check app/ main.py
    safety scan
    mypy app/ main.py
    coverage run -m unittest discover -s tests -p "test_*.py"
    coverage report -m